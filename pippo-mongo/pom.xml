<?xml version="1.0" encoding="UTF-8"?>
<project
  xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="
    http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <modelVersion>4.0.0</modelVersion>

  <groupId>net.coatli.java</groupId>
  <artifactId>pippo-mongo</artifactId>
  <version>0.1.0-SNAPSHOT</version>
  <packaging>jar</packaging>

  <name>Pippo - Mongo</name>
  <description>A microservice for the Person domain with Pippo and MongoDB.</description>

  <properties>
    <java.version>1.8</java.version>
    <maven>3.5.0</maven>
    <main.class>net.coatli.java.PippoMongoApplication</main.class>

    <project.build.environment>prod</project.build.environment>
    <project.build.resourcesDirectory>${basedir}/src/main/resources</project.build.resourcesDirectory>
    <project.build.testResourcesDirectory>${basedir}/src/test/resources</project.build.testResourcesDirectory>
    <project.build.filterDirectory>${basedir}/src/main/filters</project.build.filterDirectory>

    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.build.jdk.source>${java.version}</project.build.jdk.source>
    <project.build.jdk.target>${java.version}</project.build.jdk.target>

    <project.build.ut.skip>true</project.build.ut.skip>

    <lifecycle.mapping.version>1.0.0</lifecycle.mapping.version>
    <properties.maven.plugin.version>1.0.0</properties.maven.plugin.version>
    <maven.compiler.plugin.version>3.6.1</maven.compiler.plugin.version>
    <maven.surefire.plugin.version>2.19.1</maven.surefire.plugin.version>
    <maven.shade.plugin.version>2.1</maven.shade.plugin.version>
    <exec.maven.plugin.version>1.5.0</exec.maven.plugin.version>
    <maven.failsafe.plugin.version>2.19.1</maven.failsafe.plugin.version>

    <pippo.version>1.4.0</pippo.version>
    <slf4j.simple.version>1.7.7</slf4j.simple.version>
    <mongo.java.driver.version>3.2.2</mongo.java.driver.version>
    <commons.dbcp2.version>2.1.1</commons.dbcp2.version>
    <commons.lang3.version>3.4</commons.lang3.version>
    <metainf.services.version>1.7</metainf.services.version>

    <junit.version>4.12</junit.version>
    <httpclient.version>4.5.3</httpclient.version>
    <jackson.databind.version>2.8.5</jackson.databind.version>
  </properties>

  <dependencies>
    <dependency>
      <groupId>ro.pippo</groupId>
      <artifactId>pippo-core</artifactId>
      <version>${pippo.version}</version>
    </dependency>
    <dependency>
      <groupId>ro.pippo</groupId>
      <artifactId>pippo-undertow</artifactId>
      <version>${pippo.version}</version>
    </dependency>
    <dependency>
      <groupId>ro.pippo</groupId>
      <artifactId>pippo-fastjson</artifactId>
      <version>${pippo.version}</version>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-simple</artifactId>
      <version>${slf4j.simple.version}</version>
    </dependency>
    <dependency>
      <groupId>org.kohsuke.metainf-services</groupId>
      <artifactId>metainf-services</artifactId>
      <version>${metainf.services.version}</version>
    </dependency>
    <dependency>
      <groupId>org.mongodb</groupId>
      <artifactId>mongo-java-driver</artifactId>
      <version>${mongo.java.driver.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-lang3</artifactId>
      <version>${commons.lang3.version}</version>
    </dependency>

    <!-- Test -->
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>${junit.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.httpcomponents</groupId>
      <artifactId>httpclient</artifactId>
      <version>${httpclient.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-databind</artifactId>
      <version>${jackson.databind.version}</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <resources>
      <resource>
        <directory>${project.build.resourcesDirectory}</directory>
        <filtering>true</filtering>
      </resource>
    </resources>
    <testResources>
      <testResource>
        <directory>${project.build.testResourcesDirectory}</directory>
        <filtering>true</filtering>
      </testResource>
    </testResources>
    <filters>
      <filter>${project.build.filterDirectory}/${project.build.environment}.properties</filter>
    </filters>

    <pluginManagement>
      <plugins>
        <!-- This plugin's configuration is used to store Eclipse m2e
             settings only. It has no influence on the Maven build itself. -->
        <plugin>
          <groupId>org.eclipse.m2e</groupId>
          <artifactId>lifecycle-mapping</artifactId>
          <version>${lifecycle.mapping.version}</version>
          <configuration>
            <lifecycleMappingMetadata>
              <pluginExecutions>
                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>properties-maven-plugin</artifactId>
                    <versionRange>[${properties.maven.plugin.version},)</versionRange>
                    <goals>
                      <goal>read-project-properties</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <ignore />
                  </action>
                </pluginExecution>
              </pluginExecutions>
            </lifecycleMappingMetadata>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>

    <!-- Defining the plugin stack -->
    <plugins>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>properties-maven-plugin</artifactId>
        <version>${properties.maven.plugin.version}</version>
        <executions>
          <execution>
            <phase>initialize</phase>
            <goals>
              <goal>read-project-properties</goal>
            </goals>
            <configuration>
              <files>
                <file>${project.build.filterDirectory}/${project.build.environment}.properties</file>
              </files>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>${maven.compiler.plugin.version}</version>
        <configuration>
          <source>${project.build.jdk.source}</source>
          <target>${project.build.jdk.target}</target>
          <encoding>${project.build.sourceEncoding}</encoding>
        </configuration>
      </plugin>
      <plugin>
       <groupId>org.apache.maven.plugins</groupId>
       <artifactId>maven-surefire-plugin</artifactId>
       <version>${maven.surefire.plugin.version}</version>
       <configuration>
         <skip>${project.build.ut.skip}</skip>
       </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
        <version>${maven.failsafe.plugin.version}</version>
        <executions>
          <execution>
            <goals>
              <goal>integration-test</goal>
              <goal>verify</goal>
            </goals>
            <configuration>
              <encoding>${project.build.sourceEncoding}</encoding>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-shade-plugin</artifactId>
        <version>${maven.shade.plugin.version}</version>
        <configuration>
          <createDependencyReducedPom>false</createDependencyReducedPom>
        </configuration>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>shade</goal>
            </goals>
            <configuration>
              <transformers>
                <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                  <mainClass>${main.class}</mainClass>
                </transformer>
              </transformers>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <version>${exec.maven.plugin.version}</version>
        <configuration>
          <executable>java</executable>
          <arguments>
            <argument>-jar</argument>
            <argument>${project.build.directory}/${project.build.finalName}.${project.packaging}</argument>
          </arguments>
        </configuration>
        <executions>
          <execution>
            <id>launch-app</id>
            <phase>pre-integration-test</phase>
            <goals>
              <goal>exec</goal>
            </goals>
            <configuration>
              <async>true</async>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <profile>
      <id>local</id>

      <properties>
        <project.build.environment>local</project.build.environment>
      </properties>
    </profile>

    <profile>
      <id>prod</id>

      <properties>
        <project.build.environment>prod</project.build.environment>
      </properties>
    </profile>
  </profiles>
</project>

